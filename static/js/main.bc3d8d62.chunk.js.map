{"version":3,"sources":["comps/Post.js","comps/PostYear.js","Posts.js","Post.js","index.js"],"names":["CommPost","href","this","props","id","title","date","React","Component","PostYear","className","year","children","Posts","state","posts","years","axios","get","then","res","data","sortPostsByYear","moment","String","format","postYears","i","length","post","NewDate","Date","Year","getFullYear","push","Array","from","Set","setState","map","ID","fixDate","Title","Post","postID","match","params","value","replace","ReactHtmlParser","Content","routing","basename","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"0RAiBeA,E,iLATX,OACE,4BACE,uBAAGC,KAAM,SAAWC,KAAKC,MAAMC,IAAKF,KAAKC,MAAME,OAC/C,8BAAOH,KAAKC,MAAMG,W,GATHC,IAAMC,WCcdC,E,iLAXX,OACE,yBAAKC,UAAU,qBACb,4BAAKR,KAAKC,MAAMQ,MAChB,4BACET,KAAKC,MAAMS,e,GAPEL,IAAMC,WCyDdK,E,YApDb,WAAYV,GAAQ,IAAD,8BACjB,4CAAMA,KACDW,MAAQ,CAAEC,MAAO,GAAIC,MAAO,IAFhB,E,iFAKE,IAAD,OAClBC,IAAMC,IAAN,+BAAyCC,MAAK,SAAAC,GAC5C,IAAML,EAAQK,EAAIC,KAElB,EAAKC,gBAAgBP,Q,8BAIjBT,GACN,OAAOiB,IAAOC,OAAOlB,IAAOmB,OAAO,Q,sCAGrBV,GAEd,IADA,IAAIW,EAAY,GACPC,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAAK,CACrC,IAAME,EAAOd,EAAMY,GACnBE,EAAKC,QAAU,IAAIC,KAAKF,EAAKE,MAC7BF,EAAKG,KAAOH,EAAKC,QAAQG,cACzBP,EAAUQ,KAAKL,EAAKG,MAEtBN,EAAYS,MAAMC,KAAK,IAAIC,IAAIX,IAC/BxB,KAAKoC,SAAS,CAAEvB,MAAOA,EAAOC,MAAOU,M,+BAG7B,IAAD,OACP,OACE,oCACA,0BAAMtB,GAAG,SACNF,KAAKY,MAAME,MAAMuB,KAAI,SAAA5B,GAAI,OACxB,kBAAC,EAAD,CAAUA,KAAMA,GACb,EAAKG,MAAMC,MAAMwB,KAAI,SAAAV,GAAI,OACxBA,EAAKG,OAASrB,EACZ,kBAAC,EAAD,CACEP,GAAIyB,EAAKW,GACTlC,KAAM,EAAKmC,QAAQZ,EAAKE,MACxB1B,MAAOwB,EAAKa,QAEZ,kB,GA3CEnC,IAAMC,W,iBCwCXmC,E,YAxCb,WAAYxC,GAAQ,IAAD,8BACjB,4CAAMA,KACDyC,OAAS,EAAKzC,MAAM0C,MAAMC,OAAO1C,GACtC,EAAKU,MAAQ,CAAEe,KAAM,IAHJ,E,0EAMNkB,GACX,OAAOA,EACJC,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,O,0CAGH,IAAD,OAClB/B,IAAMC,IAAI,8BAAgChB,KAAK0C,QAAQzB,MAAK,SAAAC,GAC1D,IAAMS,EAAOT,EAAIC,KAEjB,EAAKiB,SAAS,CAAET,c,8BAIZvB,GACN,OAAOiB,IAAOC,OAAOlB,IAAOmB,OAAO,Q,+BAInC,OACE,0BAAMrB,GAAG,QACP,yBAAKM,UAAU,WACb,4BAAKR,KAAKY,MAAMe,KAAKa,OACrB,8BAAOxC,KAAKuC,QAAQvC,KAAKY,MAAMe,KAAKE,OACpC,8BAAOkB,IAAgB/C,KAAKY,MAAMe,KAAKqB,gB,GAlC9B3C,IAAMC,WCCnB2C,EACJ,kBAAC,IAAD,CAAYC,SAAS,KACnB,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,YAAYC,UAAWZ,MAKzCa,IAASC,OAAON,EAASO,SAASC,cAAc,W","file":"static/js/main.bc3d8d62.chunk.js","sourcesContent":["import React from \"react\";\n\nclass CommPost extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n      <li>\n        <a href={\"/post/\" + this.props.id}>{this.props.title}</a>\n        <date>{this.props.date}</date>\n      </li>\n    );\n  }\n}\n\nexport default CommPost;","import React from \"react\";\n\nclass PostYear extends React.Component {\n\n  render() {\n    return (\n      <div className=\"listing-container\">\n        <h2>{this.props.year}</h2>\n        <ul>\n         {this.props.children}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PostYear;\n","import React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CommPost from \"./comps/Post\";\nimport PostYear from \"./comps/PostYear\";\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [], years: [] };\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.ascode.io/posts`).then(res => {\n      const posts = res.data;\n      // console.log(posts);\n      this.sortPostsByYear(posts);\n    });\n  }\n\n  fixDate(date) {\n    return moment(String(date)).format(\"LL\");\n  }\n\n  sortPostsByYear(posts) {\n    let postYears = [];\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n      post.NewDate = new Date(post.Date);\n      post.Year = post.NewDate.getFullYear();\n      postYears.push(post.Year);\n    }\n    postYears = Array.from(new Set(postYears));\n    this.setState({ posts: posts, years: postYears });\n  }\n\n  render() {\n    return (\n      <>\n      <main id=\"posts\">\n        {this.state.years.map(year => (\n          <PostYear year={year}>\n            {this.state.posts.map(post =>\n              post.Year === year ? (\n                <CommPost\n                  id={post.ID}\n                  date={this.fixDate(post.Date)}\n                  title={post.Title}\n                />\n              ) : null\n            )}\n          </PostYear>\n        ))}\n      </main>\n      </>\n    );\n  }\n}\n\nexport default Posts;","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.postID = this.props.match.params.id;\n    this.state = { post: {} };\n  }\n\n  unescapeHTML(value) {\n    return value\n      .replace(/&amp;/g, \"&\")\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#039;/g, \"'\");\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.ascode.io/post/\" + this.postID).then(res => {\n      const post = res.data;\n      // console.log(posts);\n      this.setState({ post });\n    });\n  }\n\n  fixDate(date) {\n    return moment(String(date)).format(\"LL\");\n  }\n\n  render() {\n    return (\n      <main id=\"post\">\n        <div className=\"article\">\n          <h2>{this.state.post.Title}</h2>\n          <date>{this.fixDate(this.state.post.Date)}</date>\n          <span>{ReactHtmlParser(this.state.post.Content)}</span>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Post;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {HashRouter, Route } from 'react-router-dom';\nimport Posts from \"./Posts\"\nimport Post from \"./Post\"\n\nconst routing = (\n  <HashRouter basename='/'>\n    <div>\n      <Route exact path=\"/\" component={Posts} />\n      <Route path=\"/post/:id\" component={Post} />\n    </div>\n    </HashRouter>\n)\n\nReactDOM.render(routing, document.querySelector(\"#root\"));\n"],"sourceRoot":""}